/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pendaftaranmahasiswa;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author akmal
 */
public class PendaftaranMahasiswaForm extends javax.swing.JFrame {

    /**
     * Creates new form PendaftaranMahasiswaForm
     */
    public PendaftaranMahasiswaForm() {
        initComponents();
        fillJurusanComboBox();
        loadMahasiswaData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        namaField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        alamatField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jurusanField = new javax.swing.JComboBox<>();
        Daftar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mahasiswaTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("Pendaftaran Mahasiswa");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nama :");

        namaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Alamat : ");

        alamatField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alamatFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Jurusan :");

        jurusanField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jurusanField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jurusanFieldActionPerformed(evt);
            }
        });

        Daftar.setText("Daftar!");
        Daftar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DaftarActionPerformed(evt);
            }
        });

        mahasiswaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(mahasiswaTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jurusanField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Daftar, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                                    .addComponent(alamatField)
                                    .addComponent(namaField)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(namaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(alamatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jurusanField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Daftar)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void namaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaFieldActionPerformed

    private void alamatFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alamatFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alamatFieldActionPerformed

    private void jurusanFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jurusanFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jurusanFieldActionPerformed

    private void DaftarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DaftarActionPerformed
        String nama = namaField.getText();
        String alamat = alamatField.getText();
        String jurusan = jurusanField.getSelectedItem().toString();

        try {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/mahasiswa_db", "root", "");
            
            // Find jurusan ID
            String findJurusanIdSQL = "SELECT id FROM jurusan WHERE nama_jurusan = ?";
            PreparedStatement findJurusanIdStmt = connection.prepareStatement(findJurusanIdSQL);
            findJurusanIdStmt.setString(1, jurusan);
            ResultSet jurusanIdResultSet = findJurusanIdStmt.executeQuery();
            
            int jurusanId = -1;
            if (jurusanIdResultSet.next()) {
                jurusanId = jurusanIdResultSet.getInt("id");
            }
            
            if (jurusanId != -1) {
                // Insert into mahasiswa table
                String insertMahasiswaSQL = "INSERT INTO mahasiswa (nama, alamat) VALUES (?, ?)";
                PreparedStatement insertMahasiswaStmt = connection.prepareStatement(insertMahasiswaSQL, Statement.RETURN_GENERATED_KEYS);
                insertMahasiswaStmt.setString(1, nama);
                insertMahasiswaStmt.setString(2, alamat);
                insertMahasiswaStmt.executeUpdate();
                
                ResultSet generatedKeys = insertMahasiswaStmt.getGeneratedKeys();
                int mahasiswaId = -1;
                if (generatedKeys.next()) {
                    mahasiswaId = generatedKeys.getInt(1);
                }
                
                // Insert into pendaftaran table
                if (mahasiswaId != -1) {
                    String insertPendaftaranSQL = "INSERT INTO pendaftaran (mahasiswa_id, jurusan_id, tanggal_pendaftaran) VALUES (?, ?, NOW())";
                    PreparedStatement insertPendaftaranStmt = connection.prepareStatement(insertPendaftaranSQL);
                    insertPendaftaranStmt.setInt(1, mahasiswaId);
                    insertPendaftaranStmt.setInt(2, jurusanId);
                    insertPendaftaranStmt.executeUpdate();
                }
            }
            
            connection.close();
            JOptionPane.showMessageDialog(null, "Pendaftaran berhasil!");
            loadMahasiswaData();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Pendaftaran gagal: " + e.getMessage());
        }
    }//GEN-LAST:event_DaftarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PendaftaranMahasiswaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PendaftaranMahasiswaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PendaftaranMahasiswaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PendaftaranMahasiswaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PendaftaranMahasiswaForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Daftar;
    private javax.swing.JTextField alamatField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> jurusanField;
    private javax.swing.JTable mahasiswaTable;
    private javax.swing.JTextField namaField;
    // End of variables declaration//GEN-END:variables

    private void fillJurusanComboBox() {
    try (Connection conn = DatabaseConnection.getConnection();
         Statement stmt = conn.createStatement();
         ResultSet rs = stmt.executeQuery("SELECT nama_jurusan FROM jurusan")) {

        jurusanField.removeAllItems(); // Menghapus item sebelumnya

        while (rs.next()) {
            jurusanField.addItem(rs.getString("nama_jurusan"));
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error loading jurusan data: " + e.getMessage());
    }
}




private void loadMahasiswaData() {
        try {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost/mahasiswa_db", "root", "");
            Statement statement = connection.createStatement();
            String query = "SELECT m.id, m.nama, m.alamat, j.nama_jurusan " +
                           "FROM mahasiswa m " +
                           "JOIN pendaftaran p ON m.id = p.mahasiswa_id " +
                           "JOIN jurusan j ON p.jurusan_id = j.id";
            ResultSet resultSet = statement.executeQuery(query);

            DefaultTableModel model = new DefaultTableModel(
                new String[]{"ID", "Nama", "Alamat", "Jurusan"}, 0);
            while (resultSet.next()) {
                model.addRow(new Object[]{
                    resultSet.getInt("id"),
                    resultSet.getString("nama"),
                    resultSet.getString("alamat"),
                    resultSet.getString("nama_jurusan")
                });
            }
            mahasiswaTable.setModel(model);

            connection.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal memuat data mahasiswa: " + e.getMessage());
        }
    }

}


